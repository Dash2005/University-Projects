Microsoft (R) Macro Assembler Version 12.00.21005.1	    12/13/18 11:14:33
lab.asm							     Page 1 - 1


				include Irvine32.inc
			      C ; Include file for Irvine32.lib             (Irvine32.inc)
			      C 
			      C ;OPTION CASEMAP:NONE		; optional: make identifiers case-sensitive
			      C 
			      C INCLUDE SmallWin.inc		; MS-Windows prototypes, structures, and constants
			      C .NOLIST
			      C .LIST
			      C 
			      C INCLUDE VirtualKeys.inc
			      C ; VirtualKeys.inc
			      C .NOLIST
			      C .LIST
			      C 
			      C 
			      C .NOLIST
			      C .LIST
			      C 

 00000000			.data

 00000000 5F 5F 5F		game db '_','_','_'
 00000003 = 00000003		g_size = ($ - game)
 00000003  5F 5F 5F		     db '_','_','_'
 00000006  5F 5F 5F			 db '_','_','_'

 00000009 00000000		r_ind DD 0
 0000000D 00000000		c_ind DD 0
 00000011 31			turn db '1'
 00000012 45 6E 74 65 72	get_X db "Enter x: ",0
	   20 78 3A 20 00
 0000001C 45 6E 74 65 72	get_Y db "Enter y: ",0
	   20 79 3A 20 00
 00000026 59 6F 75 72 20	whose_turn db "Your Turn",0
	   54 75 72 6E 00
 00000030 43 6F 6E 67 72	winnerP db "Congratulations! You Won! ",0
	   61 74 75 6C 61
	   74 69 6F 6E 73
	   21 20 59 6F 75
	   20 57 6F 6E 21
	   20 00
 0000004B 59 6F 75 20 4C	winnerC db "You Lost! Better luck next time :-)",0
	   6F 73 74 21 20
	   42 65 74 74 65
	   72 20 6C 75 63
	   6B 20 6E 65 78
	   74 20 74 69 6D
	   65 20 3A 2D 29
	   00
 0000006F 49 74 73 20 61	draw db "Its a DRAW!!!",0
	   20 44 52 41 57
	   21 21 21 00
 0000007D 54 68 69 73 20	occupied db "This Place is already Occupied!",0
	   50 6C 61 63 65
	   20 69 73 20 61
	   6C 72 65 61 64
	   79 20 4F 63 63
	   75 70 69 65 64
	   21 00
 0000009D 49 6E 64 65 78	mes db "Index out of bound!!",0
	   20 6F 75 74 20
	   6F 66 20 62 6F
	   75 6E 64 21 21
	   00
 000000B2 50 6C 61 79 20	play_again db "Play again?(y/n)",0
	   61 67 61 69 6E
	   3F 28 79 2F 6E
	   29 00
 000000C3 00000000		count DD 0

 00000000			.code
 00000000			main proc

 00000000  E8 00000000 E	call Randomize

 00000005			Play:

 00000005  E8 000000C2		call Initialize_Game
 0000000A  E8 00000000 E	call clrscr

 0000000F  E8 00000138		call Display_Grid
 00000014  E8 00000000 E	call crlf

 00000019  B9 00000009		mov ecx,9

 0000001E			GAME_MAIN:

 0000001E  51			push ecx

 0000001F  BA 00000026 R	mov edx,offset whose_turn
 00000024  E8 00000000 E	call writestring
 00000029  A0 00000011 R	mov al,turn
 0000002E  E8 00000000 E	call crlf

 00000033  3C 31		cmp al,'1'
 00000035  74 10		JE P

 00000037  E8 0000032D		call Attack
 0000003C  E3 02		JECXZ Defend
 0000003E  EB 0C		JMP ABC

 00000040			Defend:
 00000040  E8 00000281		call Comp_XY
 00000045  EB 05		JMP ABC

 00000047			P:
 00000047  E8 0000009F		call INPUT

 0000004C			ABC:
 0000004C  E8 00000000 E	call crlf

 00000051  E8 0000015B		call Make_Move

 00000056  E8 00000000 E	call clrscr
 0000005B  E8 000000EC		call Display_Grid
 00000060  E8 00000000 E	call crlf

 00000065  E8 0000018F		call WIN

 0000006A  E3 14		JECXZ WINNER_ANNOUNCEMENT

 0000006C  E8 00000170		Call Change_Player

 00000071  59			pop ecx

 00000072  E2 AA		LOOP GAME_MAIN

 00000074  BA 0000006F R	mov edx,offset draw
 00000079  E8 00000000 E	call writestring
 0000007E  EB 1A		JMP E

 00000080			WINNER_ANNOUNCEMENT:
 00000080  A0 00000011 R	mov al,turn
 00000085  3C 31		cmp al,'1'
 00000087  74 07		JE PWIN
 00000089  BA 0000004B R	mov edx,offset winnerC
 0000008E  EB 05		JMP Declare_WINNER
 00000090			PWIN:
 00000090  BA 00000030 R	mov edx,offset winnerP

 00000095			Declare_WINNER:
 00000095  E8 00000000 E	call writeString

 0000009A			E:
 0000009A  E8 00000000 E	call crlf
 0000009F  BA 000000B2 R	mov edx,offset play_again
 000000A4  E8 00000000 E	call writestring
 000000A9  E8 00000000 E	call readchar
 000000AE  E8 00000000 E	call writechar

 000000B3  3C 79		cmp al,'y'
 000000B5  0F 84 FFFFFF4A	JE Play

 000000BB  E8 00000000 E	call crlf
 000000C0  E8 00000000 E	call waitmsg
				exit
 000000CC			main endp


				;*******************************PROCEDURES***************************

 000000CC			Initialize_Game PROC 
 000000CC  E8 00000000 E	call crlf
 000000D1  B2 31		mov dl,'1'
 000000D3  88 15 00000011 R	mov turn,dl

 000000D9  B9 00000009		mov ecx,9
 000000DE  BF 00000000 R	mov edi,offset game
 000000E3  B2 5F		mov dl,'_'

 000000E5			Initialize:

 000000E5  88 17		mov [edi],dl
 000000E7  47			inc edi

 000000E8  E2 FB		LOOP Initialize
 000000EA  C3			ret 
 000000EB			Initialize_Game endp

 000000EB			INPUT PROC

 000000EB  B9 0000000A		mov ecx,10

 000000F0			Valid:

 000000F0  BA 00000012 R	mov edx,offset get_X
 000000F5  E8 00000000 E	call writestring
 000000FA  E8 00000000 E	call readDec
 000000FF  A3 00000009 R	mov r_ind,eax 
 00000104  B8 00000002		mov eax,2
 00000109  3B 05 00000009 R	cmp eax,r_ind
 0000010F  72 02		jb L1
 00000111  EB 0C		jmp L2
 00000113			L1:
 00000113  BA 0000009D R	mov edx,OFFSET mes
 00000118  E8 00000000 E	call WriteString
 0000011D  EB D1		jmp Valid
 0000011F			L2:
 0000011F  BA 0000001C R	mov edx,offset get_Y
 00000124  E8 00000000 E	call writestring
 00000129  E8 00000000 E	call readDec 
 0000012E  A3 0000000D R	mov c_ind,eax
 00000133  B8 00000002		mov eax,2
 00000138  3B 05 0000000D R	cmp eax,c_ind
 0000013E  72 02		jb col1
 00000140  EB 02		jmp col2
 00000142			col1:
 00000142  EB DB		jmp L2
 00000144			col2:
 00000144  E8 0000014D		Call Check_Validity

 00000149  E0 A5		LOOPNZ Valid 

 0000014B  C3			ret
 0000014C			INPUT endp

 0000014C			Display_Grid PROC

 0000014C  BE 00000000		mov esi,0
 00000151  B9 00000003		mov ecx,g_size
 00000156  B3 30		mov bl,'0'

 00000158  B0 20		mov al,' '
 0000015A  E8 00000000 E	call WriteChar

 0000015F			L: ;Display Column Number
 0000015F  B0 20		mov al,' '
 00000161  E8 00000000 E	call WriteChar

 00000166  8A C3		mov al,bl
 00000168  E8 00000000 E	call WriteChar
 0000016D  FE C3		inc bl
 0000016F  E2 EE		LOOP L

 00000171  B3 30		mov bl,'0'
 00000173  B9 00000003		mov ecx,g_size
 00000178  E8 00000000 E	call crlf

 0000017D			L1: 
 0000017D  51			push ecx
 0000017E  B9 00000003		mov ecx,g_size

 00000183  8A C3		mov al,bl
 00000185  E8 00000000 E	call WriteChar
 0000018A  B0 20		mov al,' '
 0000018C  E8 00000000 E	call WriteChar

 00000191			L2:

 00000191  8A 86 00000000 R	mov al,game[esi]
 00000197  E8 00000000 E	call WriteChar
 0000019C  B0 20		mov al,' '
 0000019E  E8 00000000 E	call WriteChar
 000001A3  46			inc esi

 000001A4  E2 EB		LOOP L2

 000001A6  FE C3		inc bl ;Display next row number
 000001A8  E8 00000000 E	call CRLF 
 000001AD  59			pop ecx
 000001AE  E2 CD		LOOP L1

 000001B0  C3			ret 
 000001B1			Display_Grid endp


				;*********************************************Make_Move*****************************


 000001B1			Make_Move PROC

 000001B1  A1 00000009 R	mov eax,r_ind
 000001B6  BB 00000003		mov ebx,g_size
 000001BB  F7 E3		mul ebx
 000001BD  8B 35 0000000D R	mov esi,c_ind

 000001C3  8A 15 00000011 R	mov dl,turn

 000001C9  80 FA 31		cmp dl, 31h

 000001CC  74 0A		JE Player1
 000001CE  C6 84 06		mov game[eax+esi],'X' ;if player 2's turn then mark X
	   00000000 R 58
 000001D6  EB 08		JMP MOVE

 000001D8			Player1:
 000001D8  C6 84 06		mov game[eax+esi],'O' ;if player 1's turn then mark O
	   00000000 R 4F

 000001E0			MOVE:
 000001E0  C3			ret
 000001E1			Make_Move endp


				;*********************************************Change_Player*****************************


 000001E1			Change_Player PROC 
 000001E1  A0 00000011 R	mov al,turn

 000001E6  3C 31		cmp al, 31h
 000001E8  74 08		JE SWITCH2
 000001EA  FE 0D 00000011 R	dec turn
 000001F0  EB 06		JMP BYE

 000001F2			SWITCH2:
 000001F2  FE 05 00000011 R	inc turn

 000001F8			BYE:
 000001F8  C3			ret
 000001F9			Change_Player endp


				;*********************************************WIN*****************************


 000001F9			WIN PROC

 000001F9  B9 00000002		mov ecx,2

 000001FE  BE 00000000 R	mov esi,offset game
 00000203  03 35 0000000D R	add esi,c_ind

 00000209  8A 16		mov dl,[esi]
 0000020B  80 FA 5F		cmp dl,'_'
 0000020E  74 12		JE Row_Comparison

 00000210			Check_Column:

 00000210  83 C6 03		add esi,3
 00000213  8A 1E		mov bl,[esi]
 00000215  80 FB 5F		cmp bl,'_'
 00000218  74 08		JE Row_Comparison
 0000021A  3A 16		cmp dl,[esi]

 0000021C  75 04		JNZ Row_Comparison

 0000021E  E2 F0		LOOP Check_Column

 00000220  EB 73		JMP GAME_END

 00000222			Row_Comparison:
 00000222  B9 00000002		mov ecx,2
 00000227  BE 00000000 R	mov esi,offset game

 0000022C  B8 00000003		mov eax,3
 00000231  8B 1D 00000009 R	mov ebx,r_ind
 00000237  F7 E3		mul ebx

 00000239  03 F0		add esi,eax

 0000023B  8A 16		mov dl,[esi]

 0000023D			Check_Row:

 0000023D  46			inc esi
 0000023E  8A 1E		mov bl,[esi]
 00000240  80 FB 5F		cmp bl,'_'
 00000243  74 08		JE Left_Diagnol_Comparison

 00000245  3A 16		cmp dl,[esi]
 00000247  75 04		JNZ Left_Diagnol_Comparison

 00000249  E2 F2		LOOP Check_Row

 0000024B  EB 48		JMP GAME_END

 0000024D			Left_Diagnol_Comparison:
 0000024D  B9 00000002		mov ecx,2
 00000252  BE 00000000 R	mov esi,offset game

 00000257  8A 16		mov dl,[esi]

 00000259  80 FA 5F		cmp dl,'_'
 0000025C  75 02		JNE Left
 0000025E  EB 12		JMP Right_Diagnol_Comparison

 00000260			Left:
 00000260  83 C6 04		add esi,4
 00000263  8A 1E		mov bl,[esi]
 00000265  80 FB 5F		cmp bl,'_'
 00000268  74 08		JE Right_Diagnol_Comparison
 0000026A  3A 16		cmp dl,[esi]
 0000026C  75 04		JNZ Right_Diagnol_Comparison
 0000026E  E2 F0		LOOP Left

 00000270  EB 23		JMP GAME_END

 00000272			Right_Diagnol_Comparison:
 00000272  B9 00000002		mov ecx,2
 00000277  BE 00000002 Rmov esi,offset game + 2

 0000027C  8A 16		mov dl,[esi]

 0000027E  80 FA 5F		cmp dl,'_'
 00000281  75 02		JNE Right
 00000283  EB 10		JMP GAME_END

 00000285			Right:
 00000285  83 C6 02		add esi,2
 00000288  8A 1E		mov bl,[esi]
 0000028A  80 FB 5F		cmp bl,'_'
 0000028D  74 06		JE GAME_END
 0000028F  3A 16		cmp dl,[esi]
 00000291  75 02		JNZ GAME_END

 00000293  E2 F0		LOOP Right

 00000295			GAME_END:
 00000295  C3			ret
 00000296			WIN endp


				;*********************************************Check_Validity*****************************


 00000296			Check_Validity PROC

 00000296  A1 00000009 R	mov eax,r_ind
 0000029B  BB 00000003		mov ebx,g_size
 000002A0  F7 E3		mul ebx
 000002A2  8B 35 0000000D R	mov esi,c_ind

 000002A8  8A 94 30		mov dl,game[esi+eax]
	   00000000 R

 000002AF  80 FA 5F		cmp dl,'_'

 000002B2  75 02		JNE ERROR
 000002B4  EB 0F		JMP OK

 000002B6			ERROR:
 000002B6  BA 0000007D R	mov edx,offset occupied
 000002BB  E8 00000000 E	call writestring
 000002C0  E8 00000000 E	call crlf

 000002C5			OK:
 000002C5  C3			ret
 000002C6			Check_Validity endp


				;*********************************************Comp_XY*****************************


 000002C6			Comp_XY PROC

 000002C6  BE 00000000 R	mov esi,offset game
 000002CB  B9 00000009		mov ecx,9
 000002D0  E8 FFFFFF0C		call Change_Player

 000002D5			L:
 000002D5  8B FE		mov edi,esi
 000002D7  8A 16		mov dl,[esi]
 000002D9  80 FA 5F		cmp dl,'_'
 000002DC  74 02		JE Check_Move

 000002DE  EB 21		JMP A

 000002E0			Check_Move:
 000002E0  E8 00000063		Call R_C

 000002E5  89 0D 000000C3 R	mov count,ecx
 000002EB  E8 FFFFFEC1		call Make_Move
 000002F0  E8 FFFFFF04		call Win

 000002F5  B2 5F		mov dl,'_'
 000002F7  88 17		mov [edi],dl
 000002F9  E3 47		JECXZ XYZ
 000002FB  8B 0D 000000C3 R	mov ecx,count

 00000301			A:
 00000301  8B F7		mov esi,edi
 00000303  46			inc esi
 00000304  E2 CF		LOOP L

 00000306			Random_XY:

 00000306  B8 00000009		mov eax,9
 0000030B  E8 00000000 E	call RandomRange
 00000310  A3 00000009 R	mov r_ind,eax

 00000315  B8 00000009		mov eax,9
 0000031A  E8 00000000 E	call RandomRange
 0000031F  A3 0000000D R	mov c_ind,eax

 00000324  A1 00000009 R	mov eax,r_ind
 00000329  BB 00000003		mov ebx,3
 0000032E  F7 E3		mul ebx
 00000330  8B 35 0000000D R	mov esi,c_ind

 00000336  8A 94 06		mov dl,game[eax+esi]
	   00000000 R
 0000033D  80 FA 5F		cmp dl,'_'
 00000340  75 C4		JNE Random_XY

 00000342			XYZ:
 00000342  E8 FFFFFE9A		call Change_Player

 00000347  C3			ret
 00000348			Comp_XY endp


				;*********************************************R_C*****************************

 00000348			R_C PROC 

 00000348  BB 00000003		mov ebx,3
 0000034D  BA 00000000 R	mov edx,offset game
 00000352  2B F2		sub esi,edx
 00000354  BA 00000000		mov edx,0
 00000359  8B C6		mov eax,esi
 0000035B  F7 F3		div ebx
 0000035D  A3 00000009 R	mov r_ind,eax
 00000362  89 15 0000000D R	mov c_ind,edx

 00000368  C3			ret
 00000369			R_C endp


				;*********************************************Attack*****************************


 00000369			Attack PROC

 00000369  BE 00000000 R	mov esi,offset game
 0000036E  B9 00000009		mov ecx,9

 00000373			WIN_TRY:
 00000373  89 0D 000000C3 R	mov count,ecx
 00000379  8B FE		mov edi,esi
 0000037B  8A 16		mov dl,[esi]
 0000037D  80 FA 5F		cmp dl,'_'
 00000380  75 15		JNE B

 00000382			Check_MoveW:
 00000382  E8 FFFFFFC1		Call R_C

 00000387  E8 FFFFFE25		call Make_Move
 0000038C  E8 FFFFFE68		call Win

 00000391  B2 5F		mov dl,'_'
 00000393  88 17		mov [edi],dl
 00000395  E3 0B		JECXZ JKL

 00000397			B:
 00000397  8B 0D 000000C3 R	mov ecx,count
 0000039D  8B F7		mov esi,edi
 0000039F  46			inc esi
 000003A0  E2 D1		LOOP WIN_TRY

 000003A2			JKL:
 000003A2  C3			ret
 000003A3			Attack endp

				end main

Microsoft (R) Macro Assembler Version 12.00.21005.1	    12/13/18 11:14:33
lab.asm							     Symbols 2 - 1




Structures and Unions:

                N a m e                  Size
                                         Offset      Type

CONSOLE_CURSOR_INFO  . . . . . .	 00000008
  dwSize . . . . . . . . . . . .	 00000000	 DWord
  bVisible . . . . . . . . . . .	 00000004	 DWord
CONSOLE_SCREEN_BUFFER_INFO . . .	 00000016
  dwSize . . . . . . . . . . . .	 00000000	 DWord
  dwCursorPosition . . . . . . .	 00000004	 DWord
  wAttributes  . . . . . . . . .	 00000008	 Word
  srWindow . . . . . . . . . . .	 0000000A	 QWord
  dwMaximumWindowSize  . . . . .	 00000012	 DWord
COORD  . . . . . . . . . . . . .	 00000004
  X  . . . . . . . . . . . . . .	 00000000	 Word
  Y  . . . . . . . . . . . . . .	 00000002	 Word
FILETIME . . . . . . . . . . . .	 00000008
  loDateTime . . . . . . . . . .	 00000000	 DWord
  hiDateTime . . . . . . . . . .	 00000004	 DWord
FOCUS_EVENT_RECORD . . . . . . .	 00000004
  bSetFocus  . . . . . . . . . .	 00000000	 DWord
FPU_ENVIRON  . . . . . . . . . .	 0000001C
  controlWord  . . . . . . . . .	 00000000	 Word
  statusWord . . . . . . . . . .	 00000004	 Word
  tagWord  . . . . . . . . . . .	 00000008	 Word
  instrPointerOffset . . . . . .	 0000000C	 DWord
  instrPointerSelector . . . . .	 00000010	 DWord
  operandPointerOffset . . . . .	 00000014	 DWord
  operandPointerSelector . . . .	 00000018	 Word
INPUT_RECORD . . . . . . . . . .	 00000014
  EventType  . . . . . . . . . .	 00000000	 Word
  Event  . . . . . . . . . . . .	 00000004	 XmmWord
  bKeyDown . . . . . . . . . . .	 00000000	 DWord
  wRepeatCount . . . . . . . . .	 00000004	 Word
  wVirtualKeyCode  . . . . . . .	 00000006	 Word
  wVirtualScanCode . . . . . . .	 00000008	 Word
  uChar  . . . . . . . . . . . .	 0000000A	 Word
  UnicodeChar  . . . . . . . . .	 00000000	 Word
  AsciiChar  . . . . . . . . . .	 00000000	 Byte
  dwControlKeyState  . . . . . .	 0000000C	 DWord
  dwMousePosition  . . . . . . .	 00000000	 DWord
  dwButtonState  . . . . . . . .	 00000004	 DWord
  dwMouseControlKeyState . . . .	 00000008	 DWord
  dwEventFlags . . . . . . . . .	 0000000C	 DWord
  dwSize . . . . . . . . . . . .	 00000000	 DWord
  dwCommandId  . . . . . . . . .	 00000000	 DWord
  bSetFocus  . . . . . . . . . .	 00000000	 DWord
KEY_EVENT_RECORD . . . . . . . .	 00000010
  bKeyDown . . . . . . . . . . .	 00000000	 DWord
  wRepeatCount . . . . . . . . .	 00000004	 Word
  wVirtualKeyCode  . . . . . . .	 00000006	 Word
  wVirtualScanCode . . . . . . .	 00000008	 Word
  uChar  . . . . . . . . . . . .	 0000000A	 Word
  UnicodeChar  . . . . . . . . .	 00000000	 Word
  AsciiChar  . . . . . . . . . .	 00000000	 Byte
  dwControlKeyState  . . . . . .	 0000000C	 DWord
MENU_EVENT_RECORD  . . . . . . .	 00000004
  dwCommandId  . . . . . . . . .	 00000000	 DWord
MOUSE_EVENT_RECORD . . . . . . .	 00000010
  dwMousePosition  . . . . . . .	 00000000	 DWord
  dwButtonState  . . . . . . . .	 00000004	 DWord
  dwMouseControlKeyState . . . .	 00000008	 DWord
  dwEventFlags . . . . . . . . .	 0000000C	 DWord
SMALL_RECT . . . . . . . . . . .	 00000008
  Left . . . . . . . . . . . . .	 00000000	 Word
  Top  . . . . . . . . . . . . .	 00000002	 Word
  Right  . . . . . . . . . . . .	 00000004	 Word
  Bottom . . . . . . . . . . . .	 00000006	 Word
SYSTEMTIME . . . . . . . . . . .	 00000010
  wYear  . . . . . . . . . . . .	 00000000	 Word
  wMonth . . . . . . . . . . . .	 00000002	 Word
  wDayOfWeek . . . . . . . . . .	 00000004	 Word
  wDay . . . . . . . . . . . . .	 00000006	 Word
  wHour  . . . . . . . . . . . .	 00000008	 Word
  wMinute  . . . . . . . . . . .	 0000000A	 Word
  wSecond  . . . . . . . . . . .	 0000000C	 Word
  wMilliseconds  . . . . . . . .	 0000000E	 Word
WINDOW_BUFFER_SIZE_RECORD  . . .	 00000004
  dwSize . . . . . . . . . . . .	 00000000	 DWord


Segments and Groups:

                N a m e                 Size     Length   Align   Combine Class

FLAT . . . . . . . . . . . . . .	GROUP
STACK  . . . . . . . . . . . . .	32 Bit	 00001000 Para	  Stack	  'STACK'	 
_DATA  . . . . . . . . . . . . .	32 Bit	 000000C7 Para	  Public  'DATA'	
_TEXT  . . . . . . . . . . . . .	32 Bit	 000003A3 Para	  Public  'CODE'	


Procedures, parameters, and locals:

                N a m e                 Type     Value    Attr

Attack . . . . . . . . . . . . .	P Near	 00000369 _TEXT	Length= 0000003A Public STDCALL
  WIN_TRY  . . . . . . . . . . .	L Near	 00000373 _TEXT	
  Check_MoveW  . . . . . . . . .	L Near	 00000382 _TEXT	
  B  . . . . . . . . . . . . . .	L Near	 00000397 _TEXT	
  JKL  . . . . . . . . . . . . .	L Near	 000003A2 _TEXT	
Change_Player  . . . . . . . . .	P Near	 000001E1 _TEXT	Length= 00000018 Public STDCALL
  SWITCH2  . . . . . . . . . . .	L Near	 000001F2 _TEXT	
  BYE  . . . . . . . . . . . . .	L Near	 000001F8 _TEXT	
Check_Validity . . . . . . . . .	P Near	 00000296 _TEXT	Length= 00000030 Public STDCALL
  ERROR  . . . . . . . . . . . .	L Near	 000002B6 _TEXT	
  OK . . . . . . . . . . . . . .	L Near	 000002C5 _TEXT	
CloseFile  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CloseHandle  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Clrscr . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Comp_XY  . . . . . . . . . . . .	P Near	 000002C6 _TEXT	Length= 00000082 Public STDCALL
  L  . . . . . . . . . . . . . .	L Near	 000002D5 _TEXT	
  Check_Move . . . . . . . . . .	L Near	 000002E0 _TEXT	
  A  . . . . . . . . . . . . . .	L Near	 00000301 _TEXT	
  Random_XY  . . . . . . . . . .	L Near	 00000306 _TEXT	
  XYZ  . . . . . . . . . . . . .	L Near	 00000342 _TEXT	
CreateFileA  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CreateOutputFile . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Crlf . . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Delay  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Display_Grid . . . . . . . . . .	P Near	 0000014C _TEXT	Length= 00000065 Public STDCALL
  L  . . . . . . . . . . . . . .	L Near	 0000015F _TEXT	
  L1 . . . . . . . . . . . . . .	L Near	 0000017D _TEXT	
  L2 . . . . . . . . . . . . . .	L Near	 00000191 _TEXT	
DumpMem  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
DumpRegs . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ExitProcess  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FileTimeToDosDateTime  . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FileTimeToSystemTime . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FlushConsoleInputBuffer  . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FormatMessageA . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetCommandLineA  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetCommandTail . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleCP . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleCursorInfo . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleMode . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleScreenBufferInfo . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetDateTime  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetFileTime  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetKeyState  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetLastError . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetLocalTime . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetMaxXY . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetMseconds  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetNumberOfConsoleInputEvents  .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetProcessHeap . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetStdHandle . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetSystemTime  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetTextColor . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetTickCount . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Gotoxy . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapAlloc  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapCreate . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapDestroy  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapFree . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapSize . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
INPUT  . . . . . . . . . . . . .	P Near	 000000EB _TEXT	Length= 00000061 Public STDCALL
  Valid  . . . . . . . . . . . .	L Near	 000000F0 _TEXT	
  L1 . . . . . . . . . . . . . .	L Near	 00000113 _TEXT	
  L2 . . . . . . . . . . . . . .	L Near	 0000011F _TEXT	
  col1 . . . . . . . . . . . . .	L Near	 00000142 _TEXT	
  col2 . . . . . . . . . . . . .	L Near	 00000144 _TEXT	
Initialize_Game  . . . . . . . .	P Near	 000000CC _TEXT	Length= 0000001F Public STDCALL
  Initialize . . . . . . . . . .	L Near	 000000E5 _TEXT	
IsDigit  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
LocalFree  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Make_Move  . . . . . . . . . . .	P Near	 000001B1 _TEXT	Length= 00000030 Public STDCALL
  Player1  . . . . . . . . . . .	L Near	 000001D8 _TEXT	
  MOVE . . . . . . . . . . . . .	L Near	 000001E0 _TEXT	
MessageBoxA  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
MsgBoxAsk  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
MsgBox . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
OpenInputFile  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ParseDecimal32 . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ParseInteger32 . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
PeekConsoleInputA  . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
R_C  . . . . . . . . . . . . . .	P Near	 00000348 _TEXT	Length= 00000021 Public STDCALL
Random32 . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
RandomRange  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Randomize  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadChar . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadConsoleA . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadConsoleInputA  . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadDec  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadFile . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadFloat  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadFromFile . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadHex  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadInt  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadKeyFlush . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadKey  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadString . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleCursorInfo . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleCursorPosition . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleMode . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleScreenBufferSize . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleTextAttribute  . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleTitleA . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleWindowInfo . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetFilePointer . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetLocalTime . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetTextColor . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ShowFPUStack . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Sleep  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
StrLength  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_compare  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_copy . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_length . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_trim . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_ucase  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SystemTimeToFileTime . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WIN  . . . . . . . . . . . . . .	P Near	 000001F9 _TEXT	Length= 0000009D Public STDCALL
  Check_Column . . . . . . . . .	L Near	 00000210 _TEXT	
  Row_Comparison . . . . . . . .	L Near	 00000222 _TEXT	
  Check_Row  . . . . . . . . . .	L Near	 0000023D _TEXT	
  Left_Diagnol_Comparison  . . .	L Near	 0000024D _TEXT	
  Left . . . . . . . . . . . . .	L Near	 00000260 _TEXT	
  Right_Diagnol_Comparison . . .	L Near	 00000272 _TEXT	
  Right  . . . . . . . . . . . .	L Near	 00000285 _TEXT	
  GAME_END . . . . . . . . . . .	L Near	 00000295 _TEXT	
WaitMsg  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteBinB  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteBin . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteChar  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteConsoleA  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteConsoleOutputAttribute  . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteConsoleOutputCharacterA . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteDec . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteFile  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteFloat . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteHexB  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteHex . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteInt . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteStackFrameName  . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteStackFrame  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteString  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteToFile  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteWindowsMsg  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
main . . . . . . . . . . . . . .	P Near	 00000000 _TEXT	Length= 000000CC Public STDCALL
  Play . . . . . . . . . . . . .	L Near	 00000005 _TEXT	
  GAME_MAIN  . . . . . . . . . .	L Near	 0000001E _TEXT	
  Defend . . . . . . . . . . . .	L Near	 00000040 _TEXT	
  P  . . . . . . . . . . . . . .	L Near	 00000047 _TEXT	
  ABC  . . . . . . . . . . . . .	L Near	 0000004C _TEXT	
  WINNER_ANNOUNCEMENT  . . . . .	L Near	 00000080 _TEXT	
  PWIN . . . . . . . . . . . . .	L Near	 00000090 _TEXT	
  Declare_WINNER . . . . . . . .	L Near	 00000095 _TEXT	
  E  . . . . . . . . . . . . . .	L Near	 0000009A _TEXT	
printf . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External C
scanf  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External C
wsprintfA  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External C


Symbols:

                N a m e                 Type     Value    Attr

@CodeSize  . . . . . . . . . . .	Number	 00000000h   
@DataSize  . . . . . . . . . . .	Number	 00000000h   
@Interface . . . . . . . . . . .	Number	 00000003h   
@Model . . . . . . . . . . . . .	Number	 00000007h   
@code  . . . . . . . . . . . . .	Text   	 _TEXT
@data  . . . . . . . . . . . . .	Text   	 FLAT
@fardata?  . . . . . . . . . . .	Text   	 FLAT
@fardata . . . . . . . . . . . .	Text   	 FLAT
@stack . . . . . . . . . . . . .	Text   	 FLAT
ALT_MASK . . . . . . . . . . . .	Number	 00000003h   
CAPSLOCK_ON  . . . . . . . . . .	Number	 00000080h   
CREATE_ALWAYS  . . . . . . . . .	Number	 00000002h   
CREATE_NEW . . . . . . . . . . .	Number	 00000001h   
CTRL_MASK  . . . . . . . . . . .	Number	 0000000Ch   
CreateFile . . . . . . . . . . .	Text   	 CreateFileA
DO_NOT_SHARE . . . . . . . . . .	Number	 00000000h   
ENABLE_ECHO_INPUT  . . . . . . .	Number	 00000004h   
ENABLE_LINE_INPUT  . . . . . . .	Number	 00000002h   
ENABLE_MOUSE_INPUT . . . . . . .	Number	 00000010h   
ENABLE_PROCESSED_INPUT . . . . .	Number	 00000001h   
ENABLE_PROCESSED_OUTPUT  . . . .	Number	 00000001h   
ENABLE_WINDOW_INPUT  . . . . . .	Number	 00000008h   
ENABLE_WRAP_AT_EOL_OUTPUT  . . .	Number	 00000002h   
ENHANCED_KEY . . . . . . . . . .	Number	 00000100h   
FALSE  . . . . . . . . . . . . .	Number	 00000000h   
FILE_APPEND_DATA . . . . . . . .	Number	 00000004h   
FILE_ATTRIBUTE_ARCHIVE . . . . .	Number	 00000020h   
FILE_ATTRIBUTE_COMPRESSED  . . .	Number	 00000800h   
FILE_ATTRIBUTE_DEVICE  . . . . .	Number	 00000040h   
FILE_ATTRIBUTE_DIRECTORY . . . .	Number	 00000010h   
FILE_ATTRIBUTE_ENCRYPTED . . . .	Number	 00004000h   
FILE_ATTRIBUTE_HIDDEN  . . . . .	Number	 00000002h   
FILE_ATTRIBUTE_NORMAL  . . . . .	Number	 00000080h   
FILE_ATTRIBUTE_NOT_CONTENT_INDEXED .	Number	 00002000h   
FILE_ATTRIBUTE_OFFLINE . . . . .	Number	 00001000h   
FILE_ATTRIBUTE_READONLY  . . . .	Number	 00000001h   
FILE_ATTRIBUTE_REPARSE_POINT . .	Number	 00000400h   
FILE_ATTRIBUTE_SPARSE_FILE . . .	Number	 00000200h   
FILE_ATTRIBUTE_SYSTEM  . . . . .	Number	 00000004h   
FILE_ATTRIBUTE_TEMPORARY . . . .	Number	 00000100h   
FILE_BEGIN . . . . . . . . . . .	Number	 00000000h   
FILE_CURRENT . . . . . . . . . .	Number	 00000001h   
FILE_DELETE_CHILD  . . . . . . .	Number	 00000040h   
FILE_END . . . . . . . . . . . .	Number	 00000002h   
FILE_READ_DATA . . . . . . . . .	Number	 00000001h   
FILE_SHARE_DELETE  . . . . . . .	Number	 00000004h   
FILE_SHARE_READ  . . . . . . . .	Number	 00000001h   
FILE_SHARE_WRITE . . . . . . . .	Number	 00000002h   
FILE_WRITE_DATA  . . . . . . . .	Number	 00000002h   
FOCUS_EVENT  . . . . . . . . . .	Number	 00000010h   
FORMAT_MESSAGE_ALLOCATE_BUFFER .	Number	 00000100h   
FORMAT_MESSAGE_FROM_SYSTEM . . .	Number	 00001000h   
FormatMessage  . . . . . . . . .	Text   	 FormatMessageA
GENERIC_ALL  . . . . . . . . . .	Number	 10000000h   
GENERIC_EXECUTE  . . . . . . . .	Number	 20000000h   
GENERIC_READ . . . . . . . . . .	Number	 -80000000h   
GENERIC_WRITE  . . . . . . . . .	Number	 40000000h   
GetCommandLine . . . . . . . . .	Text   	 GetCommandLineA
HANDLE . . . . . . . . . . . . .	Text   	 DWORD
HEAP_GENERATE_EXCEPTIONS . . . .	Number	 00000004h   
HEAP_GROWABLE  . . . . . . . . .	Number	 00000002h   
HEAP_NO_SERIALIZE  . . . . . . .	Number	 00000001h   
HEAP_REALLOC_IN_PLACE_ONLY . . .	Number	 00000010h   
HEAP_ZERO_MEMORY . . . . . . . .	Number	 00000008h   
IDABORT  . . . . . . . . . . . .	Number	 00000003h   
IDCANCEL . . . . . . . . . . . .	Number	 00000002h   
IDCLOSE  . . . . . . . . . . . .	Number	 00000008h   
IDCONTINUE . . . . . . . . . . .	Number	 0000000Bh   
IDHELP . . . . . . . . . . . . .	Number	 00000009h   
IDIGNORE . . . . . . . . . . . .	Number	 00000005h   
IDNO . . . . . . . . . . . . . .	Number	 00000007h   
IDOK . . . . . . . . . . . . . .	Number	 00000001h   
IDRETRY  . . . . . . . . . . . .	Number	 00000004h   
IDTIMEOUT  . . . . . . . . . . .	Number	 00007D00h   
IDTRYAGAIN . . . . . . . . . . .	Number	 0000000Ah   
IDYES  . . . . . . . . . . . . .	Number	 00000006h   
INVALID_HANDLE_VALUE . . . . . .	Number	 -00000001h   
KBDOWN_FLAG  . . . . . . . . . .	Number	 00000001h   
KEY_EVENT  . . . . . . . . . . .	Number	 00000001h   
KEY_MASKS  . . . . . . . . . . .	Number	 0000001Fh   
LEFT_ALT_PRESSED . . . . . . . .	Number	 00000002h   
LEFT_CTRL_PRESSED  . . . . . . .	Number	 00000008h   
MB_ABORTRETRYIGNORE  . . . . . .	Number	 00000002h   
MB_APPLMODAL . . . . . . . . . .	Number	 00000000h   
MB_CANCELTRYCONTINUE . . . . . .	Number	 00000006h   
MB_DEFBUTTON1  . . . . . . . . .	Number	 00000000h   
MB_DEFBUTTON2  . . . . . . . . .	Number	 00000100h   
MB_DEFBUTTON3  . . . . . . . . .	Number	 00000200h   
MB_DEFBUTTON4  . . . . . . . . .	Number	 00000300h   
MB_HELP  . . . . . . . . . . . .	Number	 00004000h   
MB_ICONASTERISK  . . . . . . . .	Number	 00000040h   
MB_ICONERROR . . . . . . . . . .	Number	 00000010h   
MB_ICONEXCLAMATION . . . . . . .	Number	 00000030h   
MB_ICONHAND  . . . . . . . . . .	Number	 00000010h   
MB_ICONINFORMATION . . . . . . .	Number	 00000040h   
MB_ICONQUESTION  . . . . . . . .	Number	 00000020h   
MB_ICONSTOP  . . . . . . . . . .	Number	 00000010h   
MB_ICONWARNING . . . . . . . . .	Number	 00000030h   
MB_OKCANCEL  . . . . . . . . . .	Number	 00000001h   
MB_OK  . . . . . . . . . . . . .	Number	 00000000h   
MB_RETRYCANCEL . . . . . . . . .	Number	 00000005h   
MB_SYSTEMMODAL . . . . . . . . .	Number	 00001000h   
MB_TASKMODAL . . . . . . . . . .	Number	 00002000h   
MB_USERICON  . . . . . . . . . .	Number	 00000080h   
MB_YESNOCANCEL . . . . . . . . .	Number	 00000003h   
MB_YESNO . . . . . . . . . . . .	Number	 00000004h   
MENU_EVENT . . . . . . . . . . .	Number	 00000008h   
MOUSE_EVENT  . . . . . . . . . .	Number	 00000002h   
MessageBox . . . . . . . . . . .	Text   	 MessageBoxA
NULL . . . . . . . . . . . . . .	Number	 00000000h   
NUMLOCK_ON . . . . . . . . . . .	Number	 00000020h   
OPEN_ALWAYS  . . . . . . . . . .	Number	 00000004h   
OPEN_EXISTING  . . . . . . . . .	Number	 00000003h   
PeekConsoleInput . . . . . . . .	Text   	 PeekConsoleInputA
RIGHT_ALT_PRESSED  . . . . . . .	Number	 00000001h   
RIGHT_CTRL_PRESSED . . . . . . .	Number	 00000004h   
ReadConsoleInput . . . . . . . .	Text   	 ReadConsoleInputA
ReadConsole  . . . . . . . . . .	Text   	 ReadConsoleA
SCROLLLOCK_ON  . . . . . . . . .	Number	 00000040h   
SHIFT_MASK . . . . . . . . . . .	Number	 00000010h   
SHIFT_PRESSED  . . . . . . . . .	Number	 00000010h   
STD_ERROR_HANDLE . . . . . . . .	Number	 -0000000Ch   
STD_INPUT_HANDLE . . . . . . . .	Number	 -0000000Ah   
STD_OUTPUT_HANDLE  . . . . . . .	Number	 -0000000Bh   
SetConsoleTitle  . . . . . . . .	Text   	 SetConsoleTitleA
TAB  . . . . . . . . . . . . . .	Number	 00000009h   
TRUE . . . . . . . . . . . . . .	Number	 00000001h   
TRUNCATE_EXISTING  . . . . . . .	Number	 00000005h   
VK_11  . . . . . . . . . . . . .	Number	 000000BDh   
VK_12  . . . . . . . . . . . . .	Number	 000000BBh   
VK_ADD . . . . . . . . . . . . .	Number	 0000006Bh   
VK_BACK  . . . . . . . . . . . .	Number	 00000008h   
VK_CANCEL  . . . . . . . . . . .	Number	 00000003h   
VK_CAPITAL . . . . . . . . . . .	Number	 00000014h   
VK_CLEAR . . . . . . . . . . . .	Number	 0000000Ch   
VK_CONTROL . . . . . . . . . . .	Number	 00000011h   
VK_DECIMAL . . . . . . . . . . .	Number	 0000006Eh   
VK_DELETE  . . . . . . . . . . .	Number	 0000002Eh   
VK_DIVIDE  . . . . . . . . . . .	Number	 0000006Fh   
VK_DOWN  . . . . . . . . . . . .	Number	 00000028h   
VK_END . . . . . . . . . . . . .	Number	 00000023h   
VK_ESCAPE  . . . . . . . . . . .	Number	 0000001Bh   
VK_EXECUTE . . . . . . . . . . .	Number	 0000002Bh   
VK_F10 . . . . . . . . . . . . .	Number	 00000079h   
VK_F11 . . . . . . . . . . . . .	Number	 0000007Ah   
VK_F12 . . . . . . . . . . . . .	Number	 0000007Bh   
VK_F13 . . . . . . . . . . . . .	Number	 0000007Ch   
VK_F14 . . . . . . . . . . . . .	Number	 0000007Dh   
VK_F15 . . . . . . . . . . . . .	Number	 0000007Eh   
VK_F16 . . . . . . . . . . . . .	Number	 0000007Fh   
VK_F17 . . . . . . . . . . . . .	Number	 00000080h   
VK_F18 . . . . . . . . . . . . .	Number	 00000081h   
VK_F19 . . . . . . . . . . . . .	Number	 00000082h   
VK_F1  . . . . . . . . . . . . .	Number	 00000070h   
VK_F20 . . . . . . . . . . . . .	Number	 00000083h   
VK_F21 . . . . . . . . . . . . .	Number	 00000084h   
VK_F22 . . . . . . . . . . . . .	Number	 00000085h   
VK_F23 . . . . . . . . . . . . .	Number	 00000086h   
VK_F24 . . . . . . . . . . . . .	Number	 00000087h   
VK_F2  . . . . . . . . . . . . .	Number	 00000071h   
VK_F3  . . . . . . . . . . . . .	Number	 00000072h   
VK_F4  . . . . . . . . . . . . .	Number	 00000073h   
VK_F5  . . . . . . . . . . . . .	Number	 00000074h   
VK_F6  . . . . . . . . . . . . .	Number	 00000075h   
VK_F7  . . . . . . . . . . . . .	Number	 00000076h   
VK_F8  . . . . . . . . . . . . .	Number	 00000077h   
VK_F9  . . . . . . . . . . . . .	Number	 00000078h   
VK_HELP  . . . . . . . . . . . .	Number	 0000002Fh   
VK_HOME  . . . . . . . . . . . .	Number	 00000024h   
VK_INSERT  . . . . . . . . . . .	Number	 0000002Dh   
VK_LBUTTON . . . . . . . . . . .	Number	 00000001h   
VK_LCONTROL  . . . . . . . . . .	Number	 000000A2h   
VK_LEFT  . . . . . . . . . . . .	Number	 00000025h   
VK_LMENU . . . . . . . . . . . .	Number	 000000A4h   
VK_LSHIFT  . . . . . . . . . . .	Number	 000000A0h   
VK_MENU  . . . . . . . . . . . .	Number	 00000012h   
VK_MULTIPLY  . . . . . . . . . .	Number	 0000006Ah   
VK_NEXT  . . . . . . . . . . . .	Number	 00000022h   
VK_NUMLOCK . . . . . . . . . . .	Number	 00000090h   
VK_NUMPAD0 . . . . . . . . . . .	Number	 00000060h   
VK_NUMPAD1 . . . . . . . . . . .	Number	 00000061h   
VK_NUMPAD2 . . . . . . . . . . .	Number	 00000062h   
VK_NUMPAD3 . . . . . . . . . . .	Number	 00000063h   
VK_NUMPAD4 . . . . . . . . . . .	Number	 00000064h   
VK_NUMPAD5 . . . . . . . . . . .	Number	 00000065h   
VK_NUMPAD6 . . . . . . . . . . .	Number	 00000066h   
VK_NUMPAD7 . . . . . . . . . . .	Number	 00000067h   
VK_NUMPAD8 . . . . . . . . . . .	Number	 00000068h   
VK_NUMPAD9 . . . . . . . . . . .	Number	 00000069h   
VK_PAUSE . . . . . . . . . . . .	Number	 00000013h   
VK_PRINT . . . . . . . . . . . .	Number	 0000002Ah   
VK_PRIOR . . . . . . . . . . . .	Number	 00000021h   
VK_RBUTTON . . . . . . . . . . .	Number	 00000002h   
VK_RCONTROL  . . . . . . . . . .	Number	 000000A3h   
VK_RETURN  . . . . . . . . . . .	Number	 0000000Dh   
VK_RIGHT . . . . . . . . . . . .	Number	 00000027h   
VK_RMENU . . . . . . . . . . . .	Number	 000000A5h   
VK_RSHIFT  . . . . . . . . . . .	Number	 000000A1h   
VK_SCROLL  . . . . . . . . . . .	Number	 00000091h   
VK_SEPARATER . . . . . . . . . .	Number	 0000006Ch   
VK_SHIFT . . . . . . . . . . . .	Number	 00000010h   
VK_SNAPSHOT  . . . . . . . . . .	Number	 0000002Ch   
VK_SPACE . . . . . . . . . . . .	Number	 00000020h   
VK_SUBTRACT  . . . . . . . . . .	Number	 0000006Dh   
VK_TAB . . . . . . . . . . . . .	Number	 00000009h   
VK_UP  . . . . . . . . . . . . .	Number	 00000026h   
WINDOW_BUFFER_SIZE_EVENT . . . .	Number	 00000004h   
WriteConsoleOutputCharacter  . .	Text   	 WriteConsoleOutputCharacterA
WriteConsole . . . . . . . . . .	Text   	 WriteConsoleA
black  . . . . . . . . . . . . .	Number	 00000000h   
blue . . . . . . . . . . . . . .	Number	 00000001h   
brown  . . . . . . . . . . . . .	Number	 00000006h   
c_ind  . . . . . . . . . . . . .	DWord	 0000000D _DATA	
count  . . . . . . . . . . . . .	DWord	 000000C3 _DATA	
cyan . . . . . . . . . . . . . .	Number	 00000003h   
draw . . . . . . . . . . . . . .	Byte	 0000006F _DATA	
exit . . . . . . . . . . . . . .	Text   	 INVOKE ExitProcess,0
g_size . . . . . . . . . . . . .	Number	 00000003h   
game . . . . . . . . . . . . . .	Byte	 00000000 _DATA	
get_X  . . . . . . . . . . . . .	Byte	 00000012 _DATA	
get_Y  . . . . . . . . . . . . .	Byte	 0000001C _DATA	
gray . . . . . . . . . . . . . .	Number	 00000008h   
green  . . . . . . . . . . . . .	Number	 00000002h   
lightBlue  . . . . . . . . . . .	Number	 00000009h   
lightCyan  . . . . . . . . . . .	Number	 0000000Bh   
lightGray  . . . . . . . . . . .	Number	 00000007h   
lightGreen . . . . . . . . . . .	Number	 0000000Ah   
lightMagenta . . . . . . . . . .	Number	 0000000Dh   
lightRed . . . . . . . . . . . .	Number	 0000000Ch   
magenta  . . . . . . . . . . . .	Number	 00000005h   
mes  . . . . . . . . . . . . . .	Byte	 0000009D _DATA	
occupied . . . . . . . . . . . .	Byte	 0000007D _DATA	
play_again . . . . . . . . . . .	Byte	 000000B2 _DATA	
r_ind  . . . . . . . . . . . . .	DWord	 00000009 _DATA	
red  . . . . . . . . . . . . . .	Number	 00000004h   
turn . . . . . . . . . . . . . .	Byte	 00000011 _DATA	
white  . . . . . . . . . . . . .	Number	 0000000Fh   
whose_turn . . . . . . . . . . .	Byte	 00000026 _DATA	
winnerC  . . . . . . . . . . . .	Byte	 0000004B _DATA	
winnerP  . . . . . . . . . . . .	Byte	 00000030 _DATA	
wsprintf . . . . . . . . . . . .	Text   	 wsprintfA
yellow . . . . . . . . . . . . .	Number	 0000000Eh   

	   0 Warnings
	   0 Errors
